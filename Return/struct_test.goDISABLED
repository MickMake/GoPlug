// Code generated by finalunit, visit us at https://github.com/wimspaargaren/final-unit
package Return

import (
	"fmt"
	"testing"
	"time"

	"github.com/stretchr/testify/suite"
)

type StructSuite struct {
	suite.Suite
}

func (s *StructSuite) TestErrorAddError0() {

	pointerE := Error{prefix: "TestErrorAddError0", when: time.Time{}, err: func() error {
		return nil
	}(), warning: func() error {
		return fmt.Errorf("	FAILED")
	}()}
	e := &pointerE
	format := "Juliana Ratke"
	args := int32(69)

	e.AddError(format, args)

}

func (s *StructSuite) TestErrorAddWarning0() {

	pointerE := Error{prefix: "TestErrorAddWarning0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE
	format := -93.971656
	args := uint64(31)

	e.AddWarning(format, args)

}

func (s *StructSuite) TestErrorClear0() {

	pointerE := Error{prefix: "TestErrorClear0", when: time.Time{}, err: func() error {
		return nil
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE

	e.Clear()

}

func (s *StructSuite) TestErrorGetError0() {

	pointerE := Error{prefix: "TestErrorGetError0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE

	out := e.GetError()

	s.Error(out)

	_ = out

}

func (s *StructSuite) TestErrorGetTime0() {

	pointerE := Error{prefix: "TestErrorGetTime0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE

	out := e.GetTime()

	_ = out

}

func (s *StructSuite) TestErrorGetWarning0() {

	pointerE := Error{prefix: "TestErrorGetWarning0", when: time.Time{}, err: func() error {
		return nil
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE

	out := e.GetWarning()

	s.NoError(out)

	_ = out

}

func (s *StructSuite) TestErrorIsError0() {

	pointerE := Error{prefix: "TestErrorIsError0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE

	out := e.IsError()

	s.True(out)

	_ = out

}

func (s *StructSuite) TestErrorIsNotError0() {

	pointerE := Error{prefix: "TestErrorIsNotError0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE

	out := e.IsNotError()

	s.False(out)

	_ = out

}

func (s *StructSuite) TestErrorIsNotWarning0() {

	pointerE := Error{prefix: "TestErrorIsNotWarning0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return fmt.Errorf("	FAILED")
	}()}
	e := &pointerE

	out := e.IsNotWarning()

	s.False(out)

	_ = out

}

func (s *StructSuite) TestErrorIsWarning0() {

	pointerE := Error{prefix: "TestErrorIsWarning0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE

	out := e.IsWarning()

	s.False(out)

	_ = out

}

func (s *StructSuite) TestErrorPrint0() {

	pointerE := Error{prefix: "TestErrorPrint0", when: time.Time{}, err: func() error {
		return nil
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE

	e.Print()

}

func (s *StructSuite) TestErrorSetError0() {

	pointerE := Error{prefix: "TestErrorSetError0", when: time.Time{}, err: func() error {
		return nil
	}(), warning: func() error {
		return fmt.Errorf("	FAILED")
	}()}
	e := &pointerE
	format := uint64(79)
	args := int64(-47)

	e.SetError(format, args)

}

func (s *StructSuite) TestErrorSetPrefix0() {

	pointerE := Error{prefix: "TestErrorSetPrefix0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return fmt.Errorf("	FAILED")
	}()}
	e := &pointerE
	format := uint8(85)
	args := 7.809809

	e.SetPrefix(format, args)

}

func (s *StructSuite) TestErrorSetWarning0() {

	pointerE := Error{prefix: "TestErrorSetWarning0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE
	format := rune(-76)
	args := true

	e.SetWarning(format, args)

}

func (s *StructSuite) TestErrorString0() {

	e := Error{prefix: "TestErrorString0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return fmt.Errorf("	FAILED")
	}()}

	out := e.String()

	s.EqualValues(string(`	TestErrorString0: FAILED`), out)

	_ = out

}

func (s *StructSuite) TestErrorformat0() {

	pointerE := Error{prefix: "TestErrorformat0", when: time.Time{}, err: func() error {
		return fmt.Errorf("	FAILED")
	}(), warning: func() error {
		return nil
	}()}
	e := &pointerE
	format := uint8(23)
	args := uint8(83)

	out := e.format(format, args)

	s.EqualValues(string(``), out)

	_ = out

}

func TestStructSuite(t *testing.T) {
	suite.Run(t, new(StructSuite))
}
